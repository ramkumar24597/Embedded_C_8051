C51 COMPILER V9.55   NET                                                                   11/28/2016 20:52:48 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE NET
OBJECT MODULE PLACED IN net.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE net.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\net.l
                    -st) TABS(2)

line level    source

   1          #include <reg51.h>
   2          #define input P1
   3          double newtemp,pass1,pass2;
   4            //LCD
   5          sbit rs = P0^6;       
   6          sbit rw = P0^7;       
   7          sbit e = P3^2;       
   8          //ADC
   9          sbit rd=P3^7;      
  10          sbit wr=P3^6;      
  11          sbit intr=P0^4; 
  12          sbit cs = P3^3;
  13          void delay(unsigned int time)    
  14          {
  15   1      int c =0;
  16   1      TMOD = 0x01;
  17   1      while(c<time)
  18   1      {
  19   2        TH0 = 0xFC;
  20   2        TL0 = 0x66;
  21   2        TR0 = 1;
  22   2        while(TF0 == 0);
  23   2        TR0 =0;
  24   2        TF0 =0;
  25   2        c++;
  26   2      }
  27   1      }
  28          double adc()  
  29          {
  30   1      double temp;
  31   1      cs =0;
  32   1      rd = 1;
  33   1      wr = 0;
  34   1      delay(5);
  35   1      wr = 1;
  36   1      while(intr == 1);
  37   1      rd = 0;
  38   1      delay(5);
  39   1      temp = input;
  40   1      delay(5);
  41   1      return temp;
  42   1      }
  43          void lcdcmd(unsigned char item)   
  44          {
  45   1      P2 = item;
  46   1      rs= 0;
  47   1      rw=0;
  48   1      e=1;             
  49   1      delay(1);
  50   1      e=0;  
  51   1      }
  52          void lcddata(double item)   
  53          {
  54   1      P2 = item;
C51 COMPILER V9.55   NET                                                                   11/28/2016 20:52:48 PAGE 2   

  55   1      rs= 1;
  56   1      rw=0;
  57   1      e=1;              
  58   1      delay(1);
  59   1      e=0;
  60   1      }
  61          void disp_temp(double num)          
  62          {
  63   1      unsigned char third = 0;
  64   1      unsigned char second = 0;
  65   1      unsigned char first =0;
  66   1      third = (num/100);
  67   1      lcddata(third+0x30);
  68   1      second = (num - (third*100));
  69   1      second=(second/10);
  70   1      lcddata(second+0x30);
  71   1      first = (num - ((third*100)+(second*10)));
  72   1      lcddata(first+0x30);
  73   1      }
  74          void read(){    
  75   1      lcdcmd(0x0E);   
  76   1      lcdcmd(0x01);   
  77   1      lcdcmd(0x06);   
  78   1      lcddata('R');lcddata('E');lcddata('A');lcddata('D');lcddata('I');lcddata('N');lcddata('G');lcddata(' ');
  79   1      }
  80          void main()
  81          {
  82   1      P0=0x00;        
  83   1                                             
  84   1      read();         
  85   1      while(1){        
  86   2      newtemp=adc();      
  87   2      delay(60);    
  88   2      pass1=adc();      
  89   2      delay(60);    
  90   2         if (newtemp==pass1){        
  91   3              break;      
  92   3        }    
  93   2      }
  94   1      while(1){                                     
  95   2      lcdcmd(0x0E);                    
  96   2      lcdcmd(0x01);                   
  97   2      lcdcmd(0x06);  
  98   2      newtemp = newtemp*(160/255);  
  99   2      disp_temp(newtemp);      
 100   2      delay(300);                       
 101   2      while(1){     
 102   3      newtemp=adc();              
 103   3      delay(60);
 104   3      pass1=adc();
 105   3      delay(60);
 106   3      pass2=adc();
 107   3         if (newtemp==pass1){
 108   4            if(pass1==pass2){
 109   5            break;    } 
 110   4        }    
 111   3      }
 112   2                                         
 113   2           }    
 114   1      }     


C51 COMPILER V9.55   NET                                                                   11/28/2016 20:52:48 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    552    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
